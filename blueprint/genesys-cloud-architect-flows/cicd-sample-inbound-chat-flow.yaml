inboundChat:
  name: cicd-sample-inbound-chat-flow-2
  division: Home
  startUpRef: "/inboundChat/states/state[Initial State_10]"
  defaultLanguage: en-us
  supportedLanguages:
    en-us:
      defaultLanguageSkill:
        noValue: true
  variables:
    - queueVariable:
        name: Flow.legacyQueue
        initialValue:
          noValue: true
        isOutput: false
  settingsErrorHandling:
    errorHandling:
      disconnect:
        none: true
  states:
    - state:
        name: Initial State
        refId: Initial State_10
        actions:
          - callTask:
              name: Call "Find Legacy Queue" task
              targetTaskRef: "/inboundChat/tasks/task[Find Legacy Queue_12]"
          - decision:
              name: Legacy queue found?
              condition:
                exp: "!IsNotSetOrEmpty(Flow.legacyQueue)"
              outputs:
                "yes":
                  actions:
                    - transferToAcd:
                        name: Transfer to found queue
                        targetQueue:
                          exp: Flow.legacyQueue
                        priority:
                          lit: 0
                        preferredAgents:
                          noValue: true
                        languageSkill:
                          noValue: true
          - disconnect:
              name: Disconnect
  tasks:
    - task:
        name: Find Legacy Queue
        refId: Find Legacy Queue_12
        variables:
          - integerVariable:
              name: Task.chatGuestCustomFieldsIndex
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.targetQueueIdOrName
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - loop:
              name: Loop through Chat.Guest.customFields
              currentIndex:
                var: Task.chatGuestCustomFieldsIndex
              loopCount:
                exp: Count(Chat.Guest.customFields)
              outputs:
                loop:
                  actions:
                    - decision:
                        name: Legacy routing custom field found?
                        condition:
                          exp: AreEqual("context.genesys.legacyRoutingTargetQueueAddress", Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].key) or AreEqual("genesys.legacyRoutingTargetQueueAddress", Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].key)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Save queue ID/name to variable
                                  statements:
                                    - string:
                                        variable: Task.targetQueueIdOrName
                                        value:
                                          exp: Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].value
                              - loopExit:
                                  name: Exit Loop
          - decision:
              name: Queue ID/name found?
              condition:
                exp: "!IsNotSetOrEmpty(Task.targetQueueIdOrName)"
              outputs:
                "yes":
                  actions:
                    - findQueueById:
                        name: Find queue based on ID
                        findId:
                          exp: Task.targetQueueIdOrName
                        findResult:
                          var: Flow.legacyQueue
                        outputs:
                          notFound:
                            actions:
                              - findQueue:
                                  name: Find queue based on name
                                  findName:
                                    exp: Task.targetQueueIdOrName
                                  findResult:
                                    var: Flow.legacyQueue
          - endTask:
              name: End Task
              outputPath:
                name: default
